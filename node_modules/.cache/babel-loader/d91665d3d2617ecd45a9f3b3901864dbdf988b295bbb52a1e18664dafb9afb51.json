{"ast":null,"code":"import React,{Component}from\"react\";import Header from\"./Header.js\";import NotesList from\"./NotesList\";class App extends Component{constructor(){super(...arguments);this.state={notes:[{id:Date.now(),title:\"\",description:\"\",doesMatchSearch:true}],searchText:\"\"};this.addNote=()=>{// create a new note\nconst newNote={id:Date.now(),title:\"\",description:\"\",doesMatchSearch:true};//add new note to existing array in state\nthis.setState({notes:[newNote,...this.state.notes]});};this.onType=(editID,updatedKey,updatedValue)=>{// editID = ID of note that's edited\n// updatedKey= title or description field\n// updatedValue = whatever is entered in title or description field\nconst updatedNotes=this.state.notes.map(note=>{if(note.id!==editID){return note;}else{if(updatedKey===\"title\"){note.title=updatedValue;return note;}else{note.description=updatedValue;return note;}}});this.setState({notes:updatedNotes});};this.onSearch=text=>{const newSearchText=text.toLowerCase();const updatedNotes=this.state.notes.map(note=>{if(!newSearchText){note.doesMatchSearch=true;return note;}else{const title=note.title.toLowerCase();const description=note.description.toLowerCase();const titleMatch=title.includes(newSearchText);const descriptionMatch=description.includes(newSearchText);if(titleMatch){note.doesMatchSearch=true;}else if(descriptionMatch){note.doesMatchSearch=true;}else{note.doesMatchSearch=false;}return note;}});this.setState({notes:updatedNotes,searchText:newSearchText});};this.removeNote=noteId=>{const deleteNote=this.state.notes.filter(note=>note.id!==noteId);this.setState({notes:deleteNote});};}componentDidUpdate(){const savedNotesString=JSON.stringify(this.state.notes);localStorage.setItem(\"savedNotes\",savedNotesString);}componentDidMount(){const savedNotesString=localStorage.getItem(\"savedNotes\");if(savedNotesString){const savedNotes=JSON.parse(savedNotesString);this.setState({names:savedNotes});}}render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Header,{onSearch:this.onSearch,addNote:this.addNote,searchText:this.state.searchText}),/*#__PURE__*/React.createElement(NotesList,{removeNote:this.removeNote,onType:this.onType,notes:this.state.notes}));}}export default App;","map":{"version":3,"names":["React","Component","Header","NotesList","App","constructor","arguments","state","notes","id","Date","now","title","description","doesMatchSearch","searchText","addNote","newNote","setState","onType","editID","updatedKey","updatedValue","updatedNotes","map","note","onSearch","text","newSearchText","toLowerCase","titleMatch","includes","descriptionMatch","removeNote","noteId","deleteNote","filter","componentDidUpdate","savedNotesString","JSON","stringify","localStorage","setItem","componentDidMount","getItem","savedNotes","parse","names","render","createElement"],"sources":["/Users/dana/Documents/coding-skillcrush/Projects/Sticky-Notes-UI-App/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./Header.js\";\nimport NotesList from \"./NotesList\";\n\nclass App extends Component {\n  state = {\n    notes: [\n      {\n        id: Date.now(),\n        title: \"\",\n        description: \"\",\n        doesMatchSearch: true,\n      },\n    ],\n    searchText: \"\",\n  };\n  addNote = () => {\n    // create a new note\n    const newNote = {\n      id: Date.now(),\n      title: \"\",\n      description: \"\",\n      doesMatchSearch: true,\n    };\n    //add new note to existing array in state\n    this.setState({ notes: [newNote, ...this.state.notes] });\n  };\n\n  onType = (editID, updatedKey, updatedValue) => {\n    // editID = ID of note that's edited\n    // updatedKey= title or description field\n    // updatedValue = whatever is entered in title or description field\n\n    const updatedNotes = this.state.notes.map((note) => {\n      if (note.id !== editID) {\n        return note;\n      } else {\n        if (updatedKey === \"title\") {\n          note.title = updatedValue;\n          return note;\n        } else {\n          note.description = updatedValue;\n          return note;\n        }\n      }\n    });\n    this.setState({ notes: updatedNotes });\n  };\n\n  onSearch = (text) => {\n    const newSearchText = text.toLowerCase();\n    const updatedNotes = this.state.notes.map((note) => {\n      if (!newSearchText) {\n        note.doesMatchSearch = true;\n        return note;\n      } else {\n        const title = note.title.toLowerCase();\n        const description = note.description.toLowerCase();\n        const titleMatch = title.includes(newSearchText);\n        const descriptionMatch = description.includes(newSearchText);\n        if (titleMatch) {\n          note.doesMatchSearch = true;\n        } else if (descriptionMatch) {\n          note.doesMatchSearch = true;\n        } else {\n          note.doesMatchSearch = false;\n        }\n        return note;\n      }\n    });\n    this.setState({\n      notes: updatedNotes,\n      searchText: newSearchText,\n    });\n  };\n\n  removeNote = (noteId) => {\n    const deleteNote = this.state.notes.filter((note) => note.id !== noteId);\n    this.setState({ notes: deleteNote });\n  };\n\n  componentDidUpdate() {\n    const savedNotesString = JSON.stringify(this.state.notes);\n    localStorage.setItem(\"savedNotes\", savedNotesString);\n  }\n\n  componentDidMount() {\n    const savedNotesString = localStorage.getItem(\"savedNotes\");\n    if (savedNotesString) {\n      const savedNotes = JSON.parse(savedNotesString);\n      this.setState({ names: savedNotes });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Header\n          onSearch={this.onSearch}\n          addNote={this.addNote}\n          searchText={this.state.searchText}\n        />\n        <NotesList\n          removeNote={this.removeNote}\n          onType={this.onType}\n          notes={this.state.notes}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}